/* clinic-status.css - Modernized Version */

/* Datetime Display */
.datetime-display {
    background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
    color: var(--text-on-primary);
    text-align: center;
    padding: calc(var(--spacing-unit) * 4) calc(var(--spacing-unit) * 5); /* 1rem 1.25rem */
    margin-bottom: calc(var(--spacing-unit) * 8); /* 2rem */
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-md);
    transition: transform var(--transition-smooth), box-shadow var(--transition-smooth);
}

.datetime-display:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-lg);
}

.current-time {
    font-weight: 500;
    font-size: 1.05rem;
    margin: 0;
    letter-spacing: 0.02em;
}

/* Clinic Status Indicator */
.clinic-status {
    font-weight: 600;
    padding: calc(var(--spacing-unit) * 2.5) calc(var(--spacing-unit) * 6); /* 0.625rem 1.5rem */
    border-radius: var(--border-radius-full);
    display: inline-block;
    margin-top: calc(var(--spacing-unit) * 3); /* 0.75rem */
    transition: background-color var(--transition-smooth), color var(--transition-smooth), box-shadow var(--transition-smooth);
    position: relative;
    overflow: hidden; /* For animations like pulse */
    font-size: 0.95rem;
    line-height: 1.4;
}

.clinic-status.open {
    background-color: var(--accent-color); /* Using accent color, often green/yellow */
    color: var(--text-on-accent);
    animation: pulseStatus 2s infinite;
    border: 1px solid transparent;
}
[data-theme="dark"] .clinic-status.open {
    background-color: var(--accent-light);
    color: var(--text-on-accent);
}


.clinic-status.closed {
    background-color: #ef4444; /* Tailwind Red 500 */
    color: var(--text-on-primary); /* Assuming red is dark enough for light text */
    border: 1px solid transparent;
}
[data-theme="dark"] .clinic-status.closed {
    background-color: #dc2626; /* Tailwind Red 600 */
}

.clinic-status.soon {
    background-color: var(--primary-light);
    color: var(--text-on-primary); /* Or text-primary if primary-light is very light */
    border: 1px solid transparent;
}
[data-theme="dark"] .clinic-status.soon {
    background-color: var(--primary-color);
}


@keyframes pulseStatus {
    0% {
        box-shadow: 0 0 0 0 rgba(var(--accent-rgb), 0.5);
    }
    70% {
        box-shadow: 0 0 0 12px rgba(var(--accent-rgb), 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(var(--accent-rgb), 0);
    }
}

.status-with-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-unit) * 2; /* 0.5rem */
}

.status-icon {
    font-size: 1.1em; /* Relative to parent */
    line-height: 1;
}

#next-opening { /* Changed from class to ID based on HTML context */
    font-size: 0.9rem;
    opacity: 0.85;
    margin-top: calc(var(--spacing-unit) * 1.5); /* 0.375rem */
    display: block; /* Ensure it's on its own line if needed */
}

/* Appointment Form Container (if used, this class was in your provided CSS) */
.appointment-form-container {
    background: var(--background-card);
    padding: calc(var(--spacing-unit) * 8); /* 2rem */
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-lg);
    margin: calc(var(--spacing-unit) * 8) 0; /* 2rem 0 */
    border: 1px solid var(--border-color);
}

/* Waiting Time Indicator (Container from JS) */
.waiting-time-indicator-container {
    background-color: var(--background-card);
    padding: calc(var(--spacing-unit) * 5) calc(var(--spacing-unit) * 6); /* 1.25rem 1.5rem */
    border-radius: var(--border-radius-md);
    margin: calc(var(--spacing-unit) * 5) 0; /* 1.25rem 0 */
    box-shadow: var(--shadow-sm);
    text-align: center;
    border: 1px solid var(--border-color);
}
.waiting-time-label { /* Class for the <p> tag in JS */
    font-size: 0.9rem;
    color: var(--text-secondary);
    margin-bottom: calc(var(--spacing-unit) * 2.5); /* 0.625rem */
}

.waiting-time-indicator { /* The actual indicator div */
    display: inline-block;
    padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 5); /* 0.375rem 1.25rem */
    border-radius: var(--border-radius-full);
    font-weight: 500;
    font-size: 0.9rem;
    background-color: rgba(var(--primary-rgb), 0.1);
    color: var(--primary-dark);
    border: 1px solid rgba(var(--primary-rgb), 0.2);
}
[data-theme="dark"] .waiting-time-indicator {
    background-color: rgba(var(--primary-rgb), 0.2);
    color: var(--primary-light);
    border-color: rgba(var(--primary-rgb), 0.3);
}

/* Removed .waiting-low, .waiting-medium, .waiting-high as JS now provides fixed text */

/* Emergency Notice */
.emergency-notice {
    background-color: rgba(var(--accent-rgb), 0.08);
    border: 1px solid rgba(var(--accent-rgb), 0.2);
    color: var(--accent-dark);
    padding: calc(var(--spacing-unit) * 5); /* 1.25rem */
    border-radius: var(--border-radius-md);
    margin: calc(var(--spacing-unit) * 6) 0; /* 1.5rem 0 */
    display: flex;
    align-items: flex-start; /* Align items to top for potentially multi-line text */
    gap: var(--spacing-unit) * 4; /* 1rem */
    box-shadow: var(--shadow-sm);
    position: relative;
    overflow: hidden;
}
[data-theme="dark"] .emergency-notice {
    background-color: rgba(var(--accent-rgb), 0.15);
    border-color: rgba(var(--accent-rgb), 0.3);
    color: var(--accent-light); /* Lighter text for dark accent background */
}

.emergency-notice::before { /* Left accent border */
    content: '';
    position: absolute;
    top: 0;
    right: 0; /* RTL support */
    width: 5px;
    height: 100%;
    background-color: var(--accent-color);
}
[dir="ltr"] .emergency-notice::before {
    left: 0;
    right: auto;
}

.emergency-icon {
    font-size: 1.5rem; /* 24px */
    color: var(--accent-color);
    margin-top: calc(var(--spacing-unit) * 0.5); /* Align with first line of text */
}
.emergency-notice strong {
    font-weight: 600;
}

/* Service Cards */
.service-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));
    gap: calc(var(--spacing-unit) * 6); /* 1.5rem */
    padding: calc(var(--spacing-unit) * 6) 0; /* 1.5rem 0 */
}

.service-card {
    background: var(--background-card);
    border-radius: var(--border-radius-lg);
    padding: calc(var(--spacing-unit) * 7); /* ~1.75rem */
    box-shadow: var(--shadow-md);
    transition: transform var(--transition-smooth), box-shadow var(--transition-smooth);
    border: 1px solid var(--border-color);
    height: 100%; /* For equal height cards in a row if content varies */
    display: flex;
    flex-direction: column;
    text-align: center; /* Center content within card */
}

.service-card:hover {
    transform: translateY(-6px);
    box-shadow: var(--shadow-lg);
}

.service-icon {
    font-size: 2.5rem; /* 40px */
    color: var(--primary-color);
    margin-bottom: calc(var(--spacing-unit) * 5); /* 1.25rem */
    transition: transform var(--transition-fast), color var(--transition-fast);
    line-height: 1;
}

.service-card:hover .service-icon {
    transform: scale(1.1);
    color: var(--primary-dark);
}
[data-theme="dark"] .service-card:hover .service-icon {
    color: var(--primary-light);
}

.service-title {
    font-size: 1.15rem;
    font-weight: 600;
    margin-bottom: calc(var(--spacing-unit) * 3); /* 0.75rem */
    color: var(--text-primary);
}

.service-description {
    color: var(--text-secondary);
    font-size: 0.9rem;
    line-height: 1.6;
    flex-grow: 1; /* Allows description to take remaining space if needed */
}

/* Back to Top Button */
.back-to-top {
    position: fixed;
    bottom: calc(var(--spacing-unit) * 6); /* 1.5rem */
    right: calc(var(--spacing-unit) * 6); /* 1.5rem */
    background-color: var(--primary-color);
    color: var(--text-on-primary);
    width: 42px;
    height: 42px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 0;
    visibility: hidden;
    transition: opacity var(--transition-smooth), visibility var(--transition-smooth), transform var(--transition-smooth), background-color var(--transition-smooth);
    z-index: 1000;
    box-shadow: var(--shadow-lg);
    border: none;
}

.back-to-top.visible {
    opacity: 0.9;
    visibility: visible;
}

.back-to-top:hover {
    background-color: var(--primary-dark);
    transform: translateY(-4px) scale(1.05);
    opacity: 1;
}
.back-to-top i {
    font-size: 1.1rem;
}

[dir="rtl"] .back-to-top {
    right: auto;
    left: calc(var(--spacing-unit) * 6); /* 1.5rem */
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .service-grid {
        grid-template-columns: 1fr; /* Single column on smaller screens */
        gap: calc(var(--spacing-unit) * 5); /* 1.25rem */
    }
    .service-card {
        padding: calc(var(--spacing-unit) * 6); /* ~1.5rem */
    }
    
    .emergency-notice {
        flex-direction: column;
        text-align: center;
        gap: var(--spacing-unit) * 3; /* 0.75rem */
    }
    .emergency-notice::before { /* Full width top border on mobile */
        width: 100%;
        height: 4px;
        left: 0;
        right: 0;
    }
    .emergency-icon {
        margin-top: 0;
    }
}

/* Transition class for status changes (from JS) */
.clinic-status.status-transition {
    animation: status-change-pop 0.6s ease-out;
}

@keyframes status-change-pop {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

/* Note: Dark mode styles for .datetime-display, .appointment-form-container, 
   .waiting-time, .service-card, .service-title, .service-description, 
   .form-progress, and .emergency-notice should ideally be handled by 
   your main style.css using the CSS variables if these elements share 
   common backgrounds/text colors with other components. 
   If they are unique, keeping them here is fine, but ensure variable usage.
*/

/* Dark mode specific overrides if needed beyond variable swaps */
[data-theme="dark"] .clinic-status.open {
    /* color: var(--text-primary); */ /* Example: If accent-light is too light for text-on-accent */
}

[data-theme="dark"] .emergency-notice {
    /* Already handled by variables, this is a placeholder if more specific is needed */
}
